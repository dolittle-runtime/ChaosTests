// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Runtime/EventHorizon/Subscriptions.proto

package eventhorizon

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	protobuf "go.dolittle.io/chaostests/contracts/protobuf"
	services "go.dolittle.io/chaostests/contracts/services"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubscriptionResponse struct {
	Failure              *protobuf.Failure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SubscriptionResponse) Reset()         { *m = SubscriptionResponse{} }
func (m *SubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*SubscriptionResponse) ProtoMessage()    {}
func (*SubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f0fd3cde0f6c450, []int{0}
}

func (m *SubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionResponse.Unmarshal(m, b)
}
func (m *SubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *SubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionResponse.Merge(m, src)
}
func (m *SubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_SubscriptionResponse.Size(m)
}
func (m *SubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionResponse proto.InternalMessageInfo

func (m *SubscriptionResponse) GetFailure() *protobuf.Failure {
	if m != nil {
		return m.Failure
	}
	return nil
}

type Subscription struct {
	CallContext          *services.CallRequestContext `protobuf:"bytes,1,opt,name=callContext,proto3" json:"callContext,omitempty"`
	MicroserviceId       *protobuf.Uuid               `protobuf:"bytes,2,opt,name=microserviceId,proto3" json:"microserviceId,omitempty"`
	TenantId             *protobuf.Uuid               `protobuf:"bytes,3,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	StreamId             *protobuf.Uuid               `protobuf:"bytes,4,opt,name=streamId,proto3" json:"streamId,omitempty"`
	PartitionId          *protobuf.Uuid               `protobuf:"bytes,5,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
	ScopeId              *protobuf.Uuid               `protobuf:"bytes,6,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f0fd3cde0f6c450, []int{1}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetCallContext() *services.CallRequestContext {
	if m != nil {
		return m.CallContext
	}
	return nil
}

func (m *Subscription) GetMicroserviceId() *protobuf.Uuid {
	if m != nil {
		return m.MicroserviceId
	}
	return nil
}

func (m *Subscription) GetTenantId() *protobuf.Uuid {
	if m != nil {
		return m.TenantId
	}
	return nil
}

func (m *Subscription) GetStreamId() *protobuf.Uuid {
	if m != nil {
		return m.StreamId
	}
	return nil
}

func (m *Subscription) GetPartitionId() *protobuf.Uuid {
	if m != nil {
		return m.PartitionId
	}
	return nil
}

func (m *Subscription) GetScopeId() *protobuf.Uuid {
	if m != nil {
		return m.ScopeId
	}
	return nil
}

func init() {
	proto.RegisterType((*SubscriptionResponse)(nil), "dolittle.runtime.eventhorizon.SubscriptionResponse")
	proto.RegisterType((*Subscription)(nil), "dolittle.runtime.eventhorizon.Subscription")
}

func init() {
	proto.RegisterFile("Runtime/EventHorizon/Subscriptions.proto", fileDescriptor_5f0fd3cde0f6c450)
}

var fileDescriptor_5f0fd3cde0f6c450 = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x41, 0xeb, 0xd3, 0x30,
	0x18, 0x87, 0xd9, 0xd4, 0x4d, 0x33, 0xf5, 0x10, 0x04, 0x4b, 0x41, 0x18, 0x13, 0xd9, 0x40, 0x48,
	0x70, 0xf3, 0xa0, 0x27, 0xc1, 0xe9, 0xb4, 0xe0, 0x41, 0x3a, 0xbc, 0x78, 0x4b, 0x93, 0x77, 0x2e,
	0xd0, 0x26, 0x35, 0x79, 0x3b, 0xc4, 0x83, 0x1f, 0xc8, 0x4f, 0xe7, 0x47, 0x90, 0xae, 0xe9, 0xd6,
	0xc9, 0xa8, 0xfc, 0xaf, 0xe5, 0x79, 0x1e, 0x7e, 0x0d, 0x09, 0x59, 0xa4, 0x95, 0x41, 0x5d, 0x00,
	0x7f, 0x7f, 0x00, 0x83, 0x1f, 0xad, 0xd3, 0x3f, 0xad, 0xe1, 0xdb, 0x2a, 0xf3, 0xd2, 0xe9, 0x12,
	0xb5, 0x35, 0x9e, 0x95, 0xce, 0xa2, 0xa5, 0x4f, 0x94, 0xcd, 0x35, 0x62, 0x0e, 0xcc, 0x35, 0x0a,
	0x83, 0x5a, 0xd9, 0x37, 0x4a, 0x3c, 0xdd, 0x54, 0x46, 0x89, 0x02, 0x0c, 0x8a, 0xdc, 0xf3, 0xcf,
	0xb5, 0x92, 0x55, 0x3b, 0xfe, 0xa5, 0xd2, 0xaa, 0x09, 0xc4, 0xf3, 0x0b, 0x62, 0x0b, 0xee, 0xa0,
	0x25, 0x78, 0xbe, 0x16, 0x79, 0xbe, 0xb6, 0x06, 0xe1, 0x07, 0x06, 0xf0, 0xe9, 0xf5, 0xd4, 0x46,
	0xe8, 0xbc, 0x72, 0xd0, 0x40, 0xb3, 0x4f, 0xe4, 0x51, 0x77, 0x65, 0x0a, 0xbe, 0xb4, 0xc6, 0x03,
	0x7d, 0x49, 0xc6, 0xbb, 0x06, 0x8c, 0x06, 0xd3, 0xc1, 0x62, 0xb2, 0x8c, 0xd9, 0x69, 0x78, 0x19,
	0x52, 0x2c, 0xa4, 0xd2, 0x16, 0x9d, 0xfd, 0x19, 0x92, 0xfb, 0xdd, 0x1c, 0xfd, 0x40, 0x26, 0xf2,
	0x3c, 0x2c, 0xa4, 0x9e, 0x9d, 0x53, 0x3e, 0xcc, 0x67, 0xf5, 0xfc, 0x14, 0xbe, 0x57, 0xe0, 0x31,
	0xc0, 0x69, 0xd7, 0xa4, 0x6f, 0xc8, 0xc3, 0x42, 0x4b, 0x67, 0x83, 0x90, 0xa8, 0x68, 0x78, 0x6c,
	0x3d, 0xbe, 0x32, 0xab, 0x3e, 0xac, 0xf4, 0x1f, 0x9c, 0xae, 0xc8, 0x5d, 0x04, 0x23, 0x0c, 0x26,
	0x2a, 0xba, 0xd5, 0xaf, 0x9e, 0xc0, 0x5a, 0xf2, 0xe8, 0x40, 0x14, 0x89, 0x8a, 0x6e, 0xff, 0x47,
	0x6a, 0x41, 0xfa, 0x9a, 0x4c, 0x4a, 0xe1, 0x50, 0xd7, 0x07, 0x90, 0xa8, 0xe8, 0x4e, 0xbf, 0xd7,
	0x65, 0xe9, 0x0b, 0x32, 0xf6, 0xd2, 0x96, 0xf5, 0xef, 0x8d, 0xfa, 0xb5, 0x96, 0x5b, 0xfe, 0x22,
	0x0f, 0x2e, 0xae, 0x19, 0x2d, 0xc8, 0xbd, 0xf0, 0x21, 0x03, 0xfa, 0x9c, 0xf5, 0x5e, 0x37, 0xd6,
	0x55, 0xe3, 0xd5, 0x0d, 0xe0, 0xf6, 0xa2, 0xbc, 0x55, 0x5f, 0x5f, 0x7d, 0xb3, 0x67, 0x51, 0x5b,
	0x2e, 0xf7, 0xc2, 0x7a, 0x04, 0x8f, 0x9e, 0x4b, 0x6b, 0xd0, 0x09, 0x89, 0x9e, 0x87, 0x20, 0xef,
	0x06, 0x7f, 0x0f, 0xe7, 0xef, 0x5a, 0x2f, 0xbc, 0x1f, 0xd6, 0x7d, 0x3f, 0x6c, 0xdd, 0xea, 0xd9,
	0xe8, 0xf8, 0xf7, 0xab, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xaa, 0xed, 0xc5, 0xe7, 0x68, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SubscriptionsClient is the client API for Subscriptions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SubscriptionsClient interface {
	Subscribe(ctx context.Context, in *Subscription, opts ...grpc.CallOption) (*SubscriptionResponse, error)
}

type subscriptionsClient struct {
	cc *grpc.ClientConn
}

func NewSubscriptionsClient(cc *grpc.ClientConn) SubscriptionsClient {
	return &subscriptionsClient{cc}
}

func (c *subscriptionsClient) Subscribe(ctx context.Context, in *Subscription, opts ...grpc.CallOption) (*SubscriptionResponse, error) {
	out := new(SubscriptionResponse)
	err := c.cc.Invoke(ctx, "/dolittle.runtime.eventhorizon.Subscriptions/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SubscriptionsServer is the server API for Subscriptions service.
type SubscriptionsServer interface {
	Subscribe(context.Context, *Subscription) (*SubscriptionResponse, error)
}

// UnimplementedSubscriptionsServer can be embedded to have forward compatible implementations.
type UnimplementedSubscriptionsServer struct {
}

func (*UnimplementedSubscriptionsServer) Subscribe(ctx context.Context, req *Subscription) (*SubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterSubscriptionsServer(s *grpc.Server, srv SubscriptionsServer) {
	s.RegisterService(&_Subscriptions_serviceDesc, srv)
}

func _Subscriptions_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Subscription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubscriptionsServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolittle.runtime.eventhorizon.Subscriptions/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubscriptionsServer).Subscribe(ctx, req.(*Subscription))
	}
	return interceptor(ctx, in, info, handler)
}

var _Subscriptions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dolittle.runtime.eventhorizon.Subscriptions",
	HandlerType: (*SubscriptionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Subscribe",
			Handler:    _Subscriptions_Subscribe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Runtime/EventHorizon/Subscriptions.proto",
}
