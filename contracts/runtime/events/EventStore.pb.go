// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Runtime/Events/EventStore.proto

package events

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	protobuf "go.dolittle.io/chaostests/contracts/protobuf"
	services "go.dolittle.io/chaostests/contracts/services"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommitEventsRequest struct {
	CallContext          *services.CallRequestContext `protobuf:"bytes,1,opt,name=callContext,proto3" json:"callContext,omitempty"`
	Events               []*UncommittedEvent          `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CommitEventsRequest) Reset()         { *m = CommitEventsRequest{} }
func (m *CommitEventsRequest) String() string { return proto.CompactTextString(m) }
func (*CommitEventsRequest) ProtoMessage()    {}
func (*CommitEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89336672bdc3c3d6, []int{0}
}

func (m *CommitEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitEventsRequest.Unmarshal(m, b)
}
func (m *CommitEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitEventsRequest.Marshal(b, m, deterministic)
}
func (m *CommitEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitEventsRequest.Merge(m, src)
}
func (m *CommitEventsRequest) XXX_Size() int {
	return xxx_messageInfo_CommitEventsRequest.Size(m)
}
func (m *CommitEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitEventsRequest proto.InternalMessageInfo

func (m *CommitEventsRequest) GetCallContext() *services.CallRequestContext {
	if m != nil {
		return m.CallContext
	}
	return nil
}

func (m *CommitEventsRequest) GetEvents() []*UncommittedEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type CommitAggregateEventsRequest struct {
	CallContext          *services.CallRequestContext `protobuf:"bytes,1,opt,name=callContext,proto3" json:"callContext,omitempty"`
	Events               *UncommittedAggregateEvents  `protobuf:"bytes,2,opt,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CommitAggregateEventsRequest) Reset()         { *m = CommitAggregateEventsRequest{} }
func (m *CommitAggregateEventsRequest) String() string { return proto.CompactTextString(m) }
func (*CommitAggregateEventsRequest) ProtoMessage()    {}
func (*CommitAggregateEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89336672bdc3c3d6, []int{1}
}

func (m *CommitAggregateEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitAggregateEventsRequest.Unmarshal(m, b)
}
func (m *CommitAggregateEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitAggregateEventsRequest.Marshal(b, m, deterministic)
}
func (m *CommitAggregateEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitAggregateEventsRequest.Merge(m, src)
}
func (m *CommitAggregateEventsRequest) XXX_Size() int {
	return xxx_messageInfo_CommitAggregateEventsRequest.Size(m)
}
func (m *CommitAggregateEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitAggregateEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitAggregateEventsRequest proto.InternalMessageInfo

func (m *CommitAggregateEventsRequest) GetCallContext() *services.CallRequestContext {
	if m != nil {
		return m.CallContext
	}
	return nil
}

func (m *CommitAggregateEventsRequest) GetEvents() *UncommittedAggregateEvents {
	if m != nil {
		return m.Events
	}
	return nil
}

type FetchForAggregateRequest struct {
	CallContext          *services.CallRequestContext `protobuf:"bytes,1,opt,name=callContext,proto3" json:"callContext,omitempty"`
	Aggregate            *Aggregate                   `protobuf:"bytes,2,opt,name=aggregate,proto3" json:"aggregate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *FetchForAggregateRequest) Reset()         { *m = FetchForAggregateRequest{} }
func (m *FetchForAggregateRequest) String() string { return proto.CompactTextString(m) }
func (*FetchForAggregateRequest) ProtoMessage()    {}
func (*FetchForAggregateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89336672bdc3c3d6, []int{2}
}

func (m *FetchForAggregateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchForAggregateRequest.Unmarshal(m, b)
}
func (m *FetchForAggregateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchForAggregateRequest.Marshal(b, m, deterministic)
}
func (m *FetchForAggregateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchForAggregateRequest.Merge(m, src)
}
func (m *FetchForAggregateRequest) XXX_Size() int {
	return xxx_messageInfo_FetchForAggregateRequest.Size(m)
}
func (m *FetchForAggregateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchForAggregateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchForAggregateRequest proto.InternalMessageInfo

func (m *FetchForAggregateRequest) GetCallContext() *services.CallRequestContext {
	if m != nil {
		return m.CallContext
	}
	return nil
}

func (m *FetchForAggregateRequest) GetAggregate() *Aggregate {
	if m != nil {
		return m.Aggregate
	}
	return nil
}

type CommitEventsResponse struct {
	Failure              *protobuf.Failure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	Events               []*CommittedEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CommitEventsResponse) Reset()         { *m = CommitEventsResponse{} }
func (m *CommitEventsResponse) String() string { return proto.CompactTextString(m) }
func (*CommitEventsResponse) ProtoMessage()    {}
func (*CommitEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89336672bdc3c3d6, []int{3}
}

func (m *CommitEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitEventsResponse.Unmarshal(m, b)
}
func (m *CommitEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitEventsResponse.Marshal(b, m, deterministic)
}
func (m *CommitEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitEventsResponse.Merge(m, src)
}
func (m *CommitEventsResponse) XXX_Size() int {
	return xxx_messageInfo_CommitEventsResponse.Size(m)
}
func (m *CommitEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitEventsResponse proto.InternalMessageInfo

func (m *CommitEventsResponse) GetFailure() *protobuf.Failure {
	if m != nil {
		return m.Failure
	}
	return nil
}

func (m *CommitEventsResponse) GetEvents() []*CommittedEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type CommitAggregateEventsResponse struct {
	Failure              *protobuf.Failure         `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	Events               *CommittedAggregateEvents `protobuf:"bytes,2,opt,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CommitAggregateEventsResponse) Reset()         { *m = CommitAggregateEventsResponse{} }
func (m *CommitAggregateEventsResponse) String() string { return proto.CompactTextString(m) }
func (*CommitAggregateEventsResponse) ProtoMessage()    {}
func (*CommitAggregateEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89336672bdc3c3d6, []int{4}
}

func (m *CommitAggregateEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitAggregateEventsResponse.Unmarshal(m, b)
}
func (m *CommitAggregateEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitAggregateEventsResponse.Marshal(b, m, deterministic)
}
func (m *CommitAggregateEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitAggregateEventsResponse.Merge(m, src)
}
func (m *CommitAggregateEventsResponse) XXX_Size() int {
	return xxx_messageInfo_CommitAggregateEventsResponse.Size(m)
}
func (m *CommitAggregateEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitAggregateEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitAggregateEventsResponse proto.InternalMessageInfo

func (m *CommitAggregateEventsResponse) GetFailure() *protobuf.Failure {
	if m != nil {
		return m.Failure
	}
	return nil
}

func (m *CommitAggregateEventsResponse) GetEvents() *CommittedAggregateEvents {
	if m != nil {
		return m.Events
	}
	return nil
}

type FetchForAggregateResponse struct {
	Failure              *protobuf.Failure         `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	Events               *CommittedAggregateEvents `protobuf:"bytes,2,opt,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *FetchForAggregateResponse) Reset()         { *m = FetchForAggregateResponse{} }
func (m *FetchForAggregateResponse) String() string { return proto.CompactTextString(m) }
func (*FetchForAggregateResponse) ProtoMessage()    {}
func (*FetchForAggregateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89336672bdc3c3d6, []int{5}
}

func (m *FetchForAggregateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchForAggregateResponse.Unmarshal(m, b)
}
func (m *FetchForAggregateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchForAggregateResponse.Marshal(b, m, deterministic)
}
func (m *FetchForAggregateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchForAggregateResponse.Merge(m, src)
}
func (m *FetchForAggregateResponse) XXX_Size() int {
	return xxx_messageInfo_FetchForAggregateResponse.Size(m)
}
func (m *FetchForAggregateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchForAggregateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchForAggregateResponse proto.InternalMessageInfo

func (m *FetchForAggregateResponse) GetFailure() *protobuf.Failure {
	if m != nil {
		return m.Failure
	}
	return nil
}

func (m *FetchForAggregateResponse) GetEvents() *CommittedAggregateEvents {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*CommitEventsRequest)(nil), "dolittle.runtime.events.CommitEventsRequest")
	proto.RegisterType((*CommitAggregateEventsRequest)(nil), "dolittle.runtime.events.CommitAggregateEventsRequest")
	proto.RegisterType((*FetchForAggregateRequest)(nil), "dolittle.runtime.events.FetchForAggregateRequest")
	proto.RegisterType((*CommitEventsResponse)(nil), "dolittle.runtime.events.CommitEventsResponse")
	proto.RegisterType((*CommitAggregateEventsResponse)(nil), "dolittle.runtime.events.CommitAggregateEventsResponse")
	proto.RegisterType((*FetchForAggregateResponse)(nil), "dolittle.runtime.events.FetchForAggregateResponse")
}

func init() { proto.RegisterFile("Runtime/Events/EventStore.proto", fileDescriptor_89336672bdc3c3d6) }

var fileDescriptor_89336672bdc3c3d6 = []byte{
	// 478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x94, 0x4f, 0x8b, 0x13, 0x41,
	0x10, 0xc5, 0xe9, 0x08, 0x11, 0x2b, 0x27, 0x5b, 0xc1, 0x38, 0xf8, 0x27, 0x46, 0x64, 0x57, 0xd0,
	0x6e, 0x9c, 0x55, 0xaf, 0xba, 0xc6, 0x8d, 0x88, 0x17, 0x99, 0x45, 0x10, 0x6f, 0xbd, 0x93, 0xda,
	0xec, 0xc0, 0xa4, 0x3b, 0x4e, 0xd7, 0x2c, 0xe2, 0xd5, 0xb3, 0xdf, 0xc0, 0x83, 0x1e, 0xbc, 0x78,
	0xf6, 0xab, 0x79, 0x97, 0xa4, 0x7b, 0x32, 0xc9, 0x98, 0x26, 0xbb, 0xa8, 0xb0, 0xa7, 0x1c, 0xea,
	0xbd, 0xca, 0xaf, 0xea, 0x55, 0x0f, 0xdc, 0x4c, 0x4a, 0x4d, 0xd9, 0x04, 0xe5, 0xde, 0x31, 0x6a,
	0xb2, 0xee, 0x67, 0x9f, 0x4c, 0x81, 0x62, 0x5a, 0x18, 0x32, 0xfc, 0xca, 0xc8, 0xe4, 0x19, 0x51,
	0x8e, 0xa2, 0x70, 0x4a, 0x81, 0x73, 0x65, 0x74, 0x7b, 0x58, 0xea, 0x91, 0x9a, 0xa0, 0x26, 0x95,
	0x5b, 0xf9, 0x7a, 0x26, 0x3e, 0x28, 0x0f, 0xe5, 0x50, 0x65, 0x79, 0x59, 0xb9, 0xa3, 0xad, 0x15,
	0xd1, 0x3e, 0x16, 0xc7, 0x59, 0x8a, 0x56, 0x0e, 0x54, 0x9e, 0x0f, 0x8c, 0x26, 0xfc, 0x40, 0x5e,
	0x78, 0xa3, 0xc1, 0xb1, 0x3b, 0x1e, 0x17, 0x38, 0x56, 0x84, 0x81, 0xfa, 0xc0, 0x4c, 0x26, 0x19,
	0x11, 0x8e, 0x7c, 0xbd, 0xd7, 0xa8, 0xbf, 0xd1, 0xe9, 0xaa, 0xa2, 0xff, 0x8d, 0xc1, 0x25, 0xe7,
	0x72, 0x92, 0x04, 0xdf, 0x97, 0x68, 0x89, 0xbf, 0x80, 0x4e, 0x5a, 0xe3, 0x74, 0x59, 0x8f, 0x6d,
	0x77, 0xe2, 0x3b, 0x62, 0x31, 0xb6, 0xf5, 0xd0, 0x62, 0x06, 0xed, 0x4d, 0x5e, 0x9c, 0x2c, 0x3b,
	0xf9, 0x2e, 0xb4, 0xdd, 0x6a, 0xba, 0xad, 0xde, 0xb9, 0xed, 0x4e, 0x7c, 0x57, 0x04, 0x56, 0x27,
	0x96, 0xe0, 0xe6, 0x2c, 0x89, 0x37, 0xf6, 0x7f, 0x32, 0xb8, 0xe6, 0x18, 0x17, 0xf3, 0xff, 0x27,
	0xd8, 0x57, 0x4b, 0xb0, 0xb3, 0x1e, 0x3b, 0x27, 0x81, 0x6d, 0x42, 0x55, 0xd8, 0xdf, 0x19, 0x74,
	0x87, 0x48, 0xe9, 0xd1, 0xd0, 0x14, 0x0b, 0xcd, 0x3f, 0x47, 0x7e, 0x0a, 0x17, 0x54, 0xd5, 0xdc,
	0x53, 0xf7, 0x83, 0xd4, 0x35, 0x46, 0x6d, 0xea, 0x7f, 0x66, 0x70, 0x79, 0xf5, 0x04, 0xec, 0xd4,
	0x68, 0x8b, 0xfc, 0x21, 0x9c, 0x3f, 0x74, 0x77, 0xeb, 0xf9, 0xa2, 0xba, 0xf1, 0xd4, 0x5f, 0xb6,
	0xf0, 0x97, 0x9d, 0x54, 0x52, 0xfe, 0xa4, 0x11, 0xf8, 0x56, 0x90, 0x66, 0xb0, 0x3e, 0xee, 0xaf,
	0x0c, 0xae, 0x07, 0xe2, 0xfe, 0x2b, 0xb0, 0x97, 0x8d, 0x70, 0x1f, 0x6c, 0x06, 0x0b, 0x45, 0xfb,
	0x85, 0xc1, 0xd5, 0x35, 0xd1, 0x9e, 0x11, 0xbc, 0xf8, 0x57, 0x0b, 0xa0, 0xfe, 0x64, 0x71, 0x84,
	0xb6, 0xb3, 0xf0, 0x7b, 0x1b, 0x7a, 0xae, 0x3c, 0xab, 0xe8, 0xfe, 0x09, 0xd5, 0x7e, 0xec, 0x4f,
	0x0c, 0xb8, 0x2b, 0x2c, 0x6f, 0x85, 0x3f, 0xda, 0xd0, 0x65, 0xfd, 0x9b, 0x8e, 0x1e, 0x9f, 0xd6,
	0xe6, 0x29, 0x3e, 0xc2, 0xc5, 0x3f, 0x92, 0xe1, 0xe1, 0x5d, 0x86, 0x1e, 0x68, 0x14, 0x9f, 0xc6,
	0xe2, 0xfe, 0xfb, 0xd9, 0xdb, 0x77, 0xf1, 0xd8, 0xd4, 0xbe, 0xcc, 0xc8, 0xf4, 0x48, 0x19, 0x4b,
	0x68, 0xc9, 0xca, 0xd4, 0x68, 0x2a, 0x54, 0x4a, 0x56, 0xfa, 0x7e, 0xd2, 0xf5, 0xfb, 0xd1, 0xba,
	0xf5, 0xbc, 0x72, 0xf8, 0xcf, 0xb5, 0xd8, 0xab, 0x26, 0xf5, 0x96, 0x83, 0xf6, 0xfc, 0x6e, 0x76,
	0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x77, 0xa0, 0x4a, 0xb4, 0x99, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventStoreClient is the client API for EventStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventStoreClient interface {
	Commit(ctx context.Context, in *CommitEventsRequest, opts ...grpc.CallOption) (*CommitEventsResponse, error)
	CommitForAggregate(ctx context.Context, in *CommitAggregateEventsRequest, opts ...grpc.CallOption) (*CommitAggregateEventsResponse, error)
	FetchForAggregate(ctx context.Context, in *FetchForAggregateRequest, opts ...grpc.CallOption) (*FetchForAggregateResponse, error)
}

type eventStoreClient struct {
	cc *grpc.ClientConn
}

func NewEventStoreClient(cc *grpc.ClientConn) EventStoreClient {
	return &eventStoreClient{cc}
}

func (c *eventStoreClient) Commit(ctx context.Context, in *CommitEventsRequest, opts ...grpc.CallOption) (*CommitEventsResponse, error) {
	out := new(CommitEventsResponse)
	err := c.cc.Invoke(ctx, "/dolittle.runtime.events.EventStore/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventStoreClient) CommitForAggregate(ctx context.Context, in *CommitAggregateEventsRequest, opts ...grpc.CallOption) (*CommitAggregateEventsResponse, error) {
	out := new(CommitAggregateEventsResponse)
	err := c.cc.Invoke(ctx, "/dolittle.runtime.events.EventStore/CommitForAggregate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventStoreClient) FetchForAggregate(ctx context.Context, in *FetchForAggregateRequest, opts ...grpc.CallOption) (*FetchForAggregateResponse, error) {
	out := new(FetchForAggregateResponse)
	err := c.cc.Invoke(ctx, "/dolittle.runtime.events.EventStore/FetchForAggregate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventStoreServer is the server API for EventStore service.
type EventStoreServer interface {
	Commit(context.Context, *CommitEventsRequest) (*CommitEventsResponse, error)
	CommitForAggregate(context.Context, *CommitAggregateEventsRequest) (*CommitAggregateEventsResponse, error)
	FetchForAggregate(context.Context, *FetchForAggregateRequest) (*FetchForAggregateResponse, error)
}

// UnimplementedEventStoreServer can be embedded to have forward compatible implementations.
type UnimplementedEventStoreServer struct {
}

func (*UnimplementedEventStoreServer) Commit(ctx context.Context, req *CommitEventsRequest) (*CommitEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Commit not implemented")
}
func (*UnimplementedEventStoreServer) CommitForAggregate(ctx context.Context, req *CommitAggregateEventsRequest) (*CommitAggregateEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommitForAggregate not implemented")
}
func (*UnimplementedEventStoreServer) FetchForAggregate(ctx context.Context, req *FetchForAggregateRequest) (*FetchForAggregateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchForAggregate not implemented")
}

func RegisterEventStoreServer(s *grpc.Server, srv EventStoreServer) {
	s.RegisterService(&_EventStore_serviceDesc, srv)
}

func _EventStore_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventStoreServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolittle.runtime.events.EventStore/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventStoreServer).Commit(ctx, req.(*CommitEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventStore_CommitForAggregate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitAggregateEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventStoreServer).CommitForAggregate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolittle.runtime.events.EventStore/CommitForAggregate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventStoreServer).CommitForAggregate(ctx, req.(*CommitAggregateEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventStore_FetchForAggregate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchForAggregateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventStoreServer).FetchForAggregate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolittle.runtime.events.EventStore/FetchForAggregate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventStoreServer).FetchForAggregate(ctx, req.(*FetchForAggregateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dolittle.runtime.events.EventStore",
	HandlerType: (*EventStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Commit",
			Handler:    _EventStore_Commit_Handler,
		},
		{
			MethodName: "CommitForAggregate",
			Handler:    _EventStore_CommitForAggregate_Handler,
		},
		{
			MethodName: "FetchForAggregate",
			Handler:    _EventStore_FetchForAggregate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Runtime/Events/EventStore.proto",
}
