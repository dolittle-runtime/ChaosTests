// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Runtime/Events/Committed.proto

package events

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	artifacts "go.dolittle.io/chaostests/contracts/artifacts"
	execution "go.dolittle.io/chaostests/contracts/execution"
	protobuf "go.dolittle.io/chaostests/contracts/protobuf"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommittedEvent struct {
	EventLogSequenceNumber uint64                      `protobuf:"varint,1,opt,name=eventLogSequenceNumber,proto3" json:"eventLogSequenceNumber,omitempty"`
	Occurred               *timestamp.Timestamp        `protobuf:"bytes,2,opt,name=occurred,proto3" json:"occurred,omitempty"`
	EventSourceId          *protobuf.Uuid              `protobuf:"bytes,3,opt,name=eventSourceId,proto3" json:"eventSourceId,omitempty"`
	ExecutionContext       *execution.ExecutionContext `protobuf:"bytes,4,opt,name=executionContext,proto3" json:"executionContext,omitempty"`
	Type                   *artifacts.Artifact         `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Public                 bool                        `protobuf:"varint,6,opt,name=public,proto3" json:"public,omitempty"`
	Content                string                      `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                    `json:"-"`
	XXX_unrecognized       []byte                      `json:"-"`
	XXX_sizecache          int32                       `json:"-"`
}

func (m *CommittedEvent) Reset()         { *m = CommittedEvent{} }
func (m *CommittedEvent) String() string { return proto.CompactTextString(m) }
func (*CommittedEvent) ProtoMessage()    {}
func (*CommittedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8c9c4aa37457885, []int{0}
}

func (m *CommittedEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommittedEvent.Unmarshal(m, b)
}
func (m *CommittedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommittedEvent.Marshal(b, m, deterministic)
}
func (m *CommittedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommittedEvent.Merge(m, src)
}
func (m *CommittedEvent) XXX_Size() int {
	return xxx_messageInfo_CommittedEvent.Size(m)
}
func (m *CommittedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CommittedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CommittedEvent proto.InternalMessageInfo

func (m *CommittedEvent) GetEventLogSequenceNumber() uint64 {
	if m != nil {
		return m.EventLogSequenceNumber
	}
	return 0
}

func (m *CommittedEvent) GetOccurred() *timestamp.Timestamp {
	if m != nil {
		return m.Occurred
	}
	return nil
}

func (m *CommittedEvent) GetEventSourceId() *protobuf.Uuid {
	if m != nil {
		return m.EventSourceId
	}
	return nil
}

func (m *CommittedEvent) GetExecutionContext() *execution.ExecutionContext {
	if m != nil {
		return m.ExecutionContext
	}
	return nil
}

func (m *CommittedEvent) GetType() *artifacts.Artifact {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *CommittedEvent) GetPublic() bool {
	if m != nil {
		return m.Public
	}
	return false
}

func (m *CommittedEvent) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CommittedAggregateEvents struct {
	EventSourceId        *protobuf.Uuid                                      `protobuf:"bytes,1,opt,name=eventSourceId,proto3" json:"eventSourceId,omitempty"`
	AggregateRootId      *protobuf.Uuid                                      `protobuf:"bytes,2,opt,name=aggregateRootId,proto3" json:"aggregateRootId,omitempty"`
	AggregateRootVersion uint64                                              `protobuf:"varint,3,opt,name=aggregateRootVersion,proto3" json:"aggregateRootVersion,omitempty"`
	Events               []*CommittedAggregateEvents_CommittedAggregateEvent `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *CommittedAggregateEvents) Reset()         { *m = CommittedAggregateEvents{} }
func (m *CommittedAggregateEvents) String() string { return proto.CompactTextString(m) }
func (*CommittedAggregateEvents) ProtoMessage()    {}
func (*CommittedAggregateEvents) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8c9c4aa37457885, []int{1}
}

func (m *CommittedAggregateEvents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommittedAggregateEvents.Unmarshal(m, b)
}
func (m *CommittedAggregateEvents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommittedAggregateEvents.Marshal(b, m, deterministic)
}
func (m *CommittedAggregateEvents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommittedAggregateEvents.Merge(m, src)
}
func (m *CommittedAggregateEvents) XXX_Size() int {
	return xxx_messageInfo_CommittedAggregateEvents.Size(m)
}
func (m *CommittedAggregateEvents) XXX_DiscardUnknown() {
	xxx_messageInfo_CommittedAggregateEvents.DiscardUnknown(m)
}

var xxx_messageInfo_CommittedAggregateEvents proto.InternalMessageInfo

func (m *CommittedAggregateEvents) GetEventSourceId() *protobuf.Uuid {
	if m != nil {
		return m.EventSourceId
	}
	return nil
}

func (m *CommittedAggregateEvents) GetAggregateRootId() *protobuf.Uuid {
	if m != nil {
		return m.AggregateRootId
	}
	return nil
}

func (m *CommittedAggregateEvents) GetAggregateRootVersion() uint64 {
	if m != nil {
		return m.AggregateRootVersion
	}
	return 0
}

func (m *CommittedAggregateEvents) GetEvents() []*CommittedAggregateEvents_CommittedAggregateEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type CommittedAggregateEvents_CommittedAggregateEvent struct {
	EventLogSequenceNumber uint64                      `protobuf:"varint,1,opt,name=eventLogSequenceNumber,proto3" json:"eventLogSequenceNumber,omitempty"`
	Occurred               *timestamp.Timestamp        `protobuf:"bytes,2,opt,name=occurred,proto3" json:"occurred,omitempty"`
	ExecutionContext       *execution.ExecutionContext `protobuf:"bytes,3,opt,name=executionContext,proto3" json:"executionContext,omitempty"`
	Type                   *artifacts.Artifact         `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Public                 bool                        `protobuf:"varint,5,opt,name=public,proto3" json:"public,omitempty"`
	Content                string                      `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                    `json:"-"`
	XXX_unrecognized       []byte                      `json:"-"`
	XXX_sizecache          int32                       `json:"-"`
}

func (m *CommittedAggregateEvents_CommittedAggregateEvent) Reset() {
	*m = CommittedAggregateEvents_CommittedAggregateEvent{}
}
func (m *CommittedAggregateEvents_CommittedAggregateEvent) String() string {
	return proto.CompactTextString(m)
}
func (*CommittedAggregateEvents_CommittedAggregateEvent) ProtoMessage() {}
func (*CommittedAggregateEvents_CommittedAggregateEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8c9c4aa37457885, []int{1, 0}
}

func (m *CommittedAggregateEvents_CommittedAggregateEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommittedAggregateEvents_CommittedAggregateEvent.Unmarshal(m, b)
}
func (m *CommittedAggregateEvents_CommittedAggregateEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommittedAggregateEvents_CommittedAggregateEvent.Marshal(b, m, deterministic)
}
func (m *CommittedAggregateEvents_CommittedAggregateEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommittedAggregateEvents_CommittedAggregateEvent.Merge(m, src)
}
func (m *CommittedAggregateEvents_CommittedAggregateEvent) XXX_Size() int {
	return xxx_messageInfo_CommittedAggregateEvents_CommittedAggregateEvent.Size(m)
}
func (m *CommittedAggregateEvents_CommittedAggregateEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CommittedAggregateEvents_CommittedAggregateEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CommittedAggregateEvents_CommittedAggregateEvent proto.InternalMessageInfo

func (m *CommittedAggregateEvents_CommittedAggregateEvent) GetEventLogSequenceNumber() uint64 {
	if m != nil {
		return m.EventLogSequenceNumber
	}
	return 0
}

func (m *CommittedAggregateEvents_CommittedAggregateEvent) GetOccurred() *timestamp.Timestamp {
	if m != nil {
		return m.Occurred
	}
	return nil
}

func (m *CommittedAggregateEvents_CommittedAggregateEvent) GetExecutionContext() *execution.ExecutionContext {
	if m != nil {
		return m.ExecutionContext
	}
	return nil
}

func (m *CommittedAggregateEvents_CommittedAggregateEvent) GetType() *artifacts.Artifact {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *CommittedAggregateEvents_CommittedAggregateEvent) GetPublic() bool {
	if m != nil {
		return m.Public
	}
	return false
}

func (m *CommittedAggregateEvents_CommittedAggregateEvent) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*CommittedEvent)(nil), "dolittle.runtime.events.CommittedEvent")
	proto.RegisterType((*CommittedAggregateEvents)(nil), "dolittle.runtime.events.CommittedAggregateEvents")
	proto.RegisterType((*CommittedAggregateEvents_CommittedAggregateEvent)(nil), "dolittle.runtime.events.CommittedAggregateEvents.CommittedAggregateEvent")
}

func init() { proto.RegisterFile("Runtime/Events/Committed.proto", fileDescriptor_e8c9c4aa37457885) }

var fileDescriptor_e8c9c4aa37457885 = []byte{
	// 488 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x51, 0x6b, 0xd4, 0x4c,
	0x14, 0x25, 0xbb, 0xe9, 0xb6, 0xdf, 0x94, 0x4f, 0x65, 0x90, 0xee, 0x10, 0x44, 0x63, 0x51, 0xc8,
	0x8b, 0x13, 0x59, 0xa1, 0x6f, 0x3e, 0xac, 0xb5, 0xc2, 0x82, 0x48, 0x99, 0xaa, 0x88, 0x6f, 0xd9,
	0xe4, 0x36, 0x06, 0x92, 0x4c, 0x9c, 0xdc, 0x91, 0xfa, 0x97, 0xfc, 0x13, 0xfe, 0xaa, 0xbe, 0x4b,
	0x26, 0x99, 0x84, 0x6c, 0x9b, 0x07, 0x45, 0x7c, 0xcb, 0xcc, 0x3d, 0xf7, 0xcc, 0xdc, 0x73, 0x4e,
	0x86, 0x3c, 0x14, 0xba, 0xc4, 0xac, 0x80, 0xf0, 0xec, 0x1b, 0x94, 0x58, 0x87, 0xa7, 0xb2, 0x28,
	0x32, 0x44, 0x48, 0x78, 0xa5, 0x24, 0x4a, 0xba, 0x4c, 0x64, 0x9e, 0x21, 0xe6, 0xc0, 0x55, 0x0b,
	0xe4, 0x60, 0x80, 0xde, 0xd3, 0x37, 0xba, 0x4c, 0xa2, 0x02, 0x4a, 0x8c, 0xf2, 0x3a, 0x5c, 0x2b,
	0xcc, 0x2e, 0xa3, 0x18, 0x87, 0xaf, 0xb6, 0xdf, 0x7b, 0x36, 0x82, 0x9d, 0x5d, 0x41, 0xac, 0x31,
	0x93, 0xe5, 0xf0, 0x75, 0x2a, 0x4b, 0x84, 0x2b, 0x0b, 0xf7, 0x47, 0xf0, 0xf3, 0x66, 0x6f, 0xab,
	0x2f, 0xc3, 0x0f, 0x3a, 0xeb, 0x2e, 0xe4, 0x3d, 0x4a, 0xa5, 0x4c, 0x73, 0x08, 0x2b, 0x5b, 0x6b,
	0x2e, 0x55, 0x63, 0x54, 0x54, 0x2d, 0xe0, 0xf8, 0x7a, 0x46, 0xee, 0xf4, 0x53, 0x98, 0xa9, 0xe8,
	0x09, 0x39, 0x32, 0xb7, 0x7e, 0x2b, 0xd3, 0x0b, 0xf8, 0xaa, 0xa1, 0x8c, 0xe1, 0x9d, 0x2e, 0xb6,
	0xa0, 0x98, 0xe3, 0x3b, 0x81, 0x2b, 0x26, 0xaa, 0xf4, 0x84, 0x1c, 0xc8, 0x38, 0xd6, 0x4a, 0x41,
	0xc2, 0x66, 0xbe, 0x13, 0x1c, 0xae, 0x3c, 0xde, 0x1e, 0xcf, 0xed, 0xf1, 0xfc, 0xbd, 0x3d, 0x5e,
	0xf4, 0x58, 0xfa, 0x92, 0xfc, 0x6f, 0x18, 0x2f, 0xa4, 0x56, 0x31, 0x6c, 0x12, 0x36, 0x37, 0xcd,
	0x4b, 0xde, 0x8b, 0xd9, 0xb7, 0x37, 0x93, 0x89, 0x31, 0x9a, 0x9e, 0x93, 0x7b, 0xb0, 0x23, 0x0f,
	0x73, 0x0d, 0xc3, 0x93, 0x81, 0xa1, 0x47, 0xf0, 0x5d, 0x29, 0xc5, 0x8d, 0x6e, 0xfa, 0x9c, 0xb8,
	0xf8, 0xbd, 0x02, 0xb6, 0x67, 0x58, 0x1e, 0x0c, 0x2c, 0x91, 0xf5, 0x8d, 0x5b, 0xdf, 0x84, 0x41,
	0xd2, 0x23, 0xb2, 0xa8, 0xf4, 0x36, 0xcf, 0x62, 0xb6, 0xf0, 0x9d, 0xe0, 0x40, 0x74, 0x2b, 0xca,
	0xc8, 0x7e, 0xdc, 0x90, 0x96, 0xc8, 0xf6, 0x7d, 0x27, 0xf8, 0x4f, 0xd8, 0xe5, 0xf1, 0xb5, 0x4b,
	0x58, 0xaf, 0xfb, 0x3a, 0x4d, 0x15, 0xa4, 0x11, 0x42, 0x1b, 0xab, 0x9b, 0x8a, 0x38, 0xbf, 0xa5,
	0xc8, 0x9a, 0xdc, 0x8d, 0x2c, 0xa3, 0x90, 0x12, 0x37, 0xd6, 0x8f, 0x49, 0x82, 0x5d, 0x3c, 0x5d,
	0x91, 0xfb, 0xa3, 0xad, 0x8f, 0xa0, 0xea, 0x4c, 0x96, 0xc6, 0x1a, 0x57, 0xdc, 0x5a, 0xa3, 0x11,
	0x59, 0xb4, 0x69, 0x67, 0xae, 0x3f, 0x0f, 0x0e, 0x57, 0x1b, 0x3e, 0xf1, 0x37, 0xf0, 0xa9, 0xc1,
	0xa7, 0x0a, 0xa2, 0x23, 0xf6, 0x7e, 0xce, 0xc8, 0x72, 0x02, 0xf3, 0xcf, 0x63, 0x7b, 0x5b, 0xee,
	0xe6, 0x7f, 0x25, 0x77, 0xee, 0x1f, 0xe4, 0x6e, 0x6f, 0x2a, 0x77, 0x8b, 0x51, 0xee, 0x5e, 0x7d,
	0xfa, 0xbc, 0x4a, 0xe5, 0xc0, 0x9c, 0xc9, 0x30, 0xfe, 0x12, 0xc9, 0x1a, 0xa1, 0xc6, 0x3a, 0x6c,
	0x40, 0xca, 0xbc, 0x4b, 0x9d, 0x61, 0x61, 0xab, 0xfb, 0x8f, 0xd9, 0xe3, 0xd7, 0xb6, 0xa3, 0x7b,
	0x01, 0x79, 0xef, 0x58, 0xd7, 0xb2, 0x5d, 0x18, 0xb5, 0x5e, 0xfc, 0x0a, 0x00, 0x00, 0xff, 0xff,
	0xc3, 0xec, 0x4f, 0xc8, 0x24, 0x05, 0x00, 0x00,
}
